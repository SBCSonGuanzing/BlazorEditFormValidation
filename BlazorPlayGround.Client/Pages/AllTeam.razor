@page "/teams"

@using BlazorPlayGround.Client.Services.TeamService
@inject HttpClient Http
@inject IClientTeamService clientTeamService
@inject NavigationManager NavigationManager

<PageTitle>Teams</PageTitle>

<h3>Teams</h3>
<MudTable Items="clientTeamService.teams" Hover="true" Striped="true" Dense="true" Class="mb-2">
    <HeaderContent>
        <MudTh>Teams</MudTh>
        <MudTh>Action</MudTh>
    </HeaderContent>
    <RowTemplate>

        <MudTd DataLabel="Title">
            @context.Name
        </MudTd>

        <MudTd>
            <MudIconButton OnClick="() => editTeam(context.Id)"
                           Icon="@Icons.Material.Filled.Edit"
                           Color="Color.Primary"
                           Variant="Variant.Filled"></MudIconButton>
            <MudIconButton OnClick="() => deleteTeam(context.Id)"
                           Icon="@Icons.Material.Filled.Delete"
                           Color="Color.Error"
                           Variant="Variant.Filled">
            </MudIconButton>
        </MudTd>

    </RowTemplate>
</MudTable>


<MudIconButton OnClick="CreateNewTeam"
               Color="Color.Primary"
               Variant="Variant.Filled">Create New Team
</MudIconButton>


@code {

    List<Team> teams = new List<Team>();

    Team team = new Team();

    protected override async Task OnInitializedAsync()
    {
        teams = await clientTeamService.GetAllTeam();
    }

    // Delete Team
    async void deleteTeam(int id)
    {
        await clientTeamService.DeleteTeam(id);
        StateHasChanged();
    }

    void CreateNewTeam() => NavigationManager.NavigateTo($"/team");

    void editTeam(int id) => NavigationManager.NavigateTo($"/team/{id}");



}
