@page "/teams"

@using BlazorPlayGround.Client.Services.TeamService
@inject HttpClient Http
@inject IClientTeamService clientTeamService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar


<PageTitle>Teams</PageTitle>
<h1>Teams</h1>

<MudTable Items="clientTeamService.teams" Hover="true" Striped="true" Dense="true" Class="mb-2">
    <HeaderContent>
        <MudTh>Teams</MudTh>
        <AuthorizeView Roles="Admin">
            <Authorized>
                <MudTh>Action</MudTh>
            </Authorized>
        </AuthorizeView>
    </HeaderContent>
    <RowTemplate Context ="title">

        <MudTd DataLabel="Title">
            @title.Name
        </MudTd>
        <AuthorizeView Roles="Admin"> 
            <Authorized>
                <MudTd>
                    <MudIconButton OnClick="() => editTeam(title.Id)"
                                   Icon="@Icons.Material.Filled.Edit"
                                   Color="Color.Primary"
                                   Variant="Variant.Filled"></MudIconButton>
                    <MudIconButton OnClick="() => deleteTeam(title.Id)"
                                   Icon="@Icons.Material.Filled.Delete"
                                   Color="Color.Error"
                                   Variant="Variant.Filled">
                    </MudIconButton>
                </MudTd>
            </Authorized>
        </AuthorizeView>
    </RowTemplate>
</MudTable>
<AuthorizeView Roles="Admin">
    <Authorized>
        <MudIconButton OnClick="CreateNewTeam"
                       Color="Color.Primary"
                       Variant="Variant.Filled">Create New Team
        </MudIconButton>
    </Authorized>
</AuthorizeView>

@code {

    List<Team> teams = new List<Team>();

    Team team = new Team();

    protected override async Task OnInitializedAsync()
    {
        teams = await clientTeamService.GetAllTeam();
    }

    // Delete Team
    async void deleteTeam(int id)
    {
        await clientTeamService.DeleteTeam(id);
        StateHasChanged();
        Snackbar.Add(

            "Deleted Team Successfully",

            Severity.Success,

            config =>

            {

                config.ShowTransitionDuration = 200;

                config.HideTransitionDuration = 400;

                config.VisibleStateDuration = 2500;

            });
    }

    void CreateNewTeam() => NavigationManager.NavigateTo($"/team");

    void editTeam(int id) => NavigationManager.NavigateTo($"/team/{id}");

}
