@page "/characters"

@using BlazorPlayGround.Client.Services.CharacterServices

@inject HttpClient Http
@inject IClientCharacterService clientCharacterService
@inject IClientTeamService clientTeamService
@inject IClientDifficultyService clientDifficultyService

@inject NavigationManager NavigationManager

<h3>Characters</h3>

<MudTable Items="clientCharacterService.characters" Hover="true" Striped="true" Dense="true" Class="mb-2">
    <HeaderContent>
        <MudTh>Image</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Bio</MudTh>
        <MudTh>BirthDate</MudTh>
        <MudTh>Team</MudTh>
        <MudTh>Difficulty</MudTh>
        <MudTh>IsReadyToFight</MudTh>
        <MudTh>Action</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Image"><MudAvatar Image="@context.Image"></MudAvatar></MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Bio">@context.Bio</MudTd>
            <MudTd DataLabel="BirthDate">@context.BirthDate</MudTd>
            @if (context.Team != null)
            {
                <MudTd DataLabel="Team">@context.Team.Name</MudTd>
            }
            else
            {
                <MudTd DataLabel="NoResult">No Results Found</MudTd>
            }
            @if (context.Difficulty != null)
            {
                <MudTd DataLabel="Title">@context.Difficulty.Title</MudTd>
            }
            else
            {
                <MudTd>No Results Found</MudTd>
            }
            <MudTd DataLabel="isReadyToFight">@context.isReadyToFight</MudTd>
            <MudTd>
                <MudIconButton 
                    OnClick="() => EditCharacter(context.Id)"
                    Icon="@Icons.Material.Filled.Edit"
                    Color="Color.Primary"
                    Variant="Variant.Filled"
                ></MudIconButton>
                <MudIconButton OnClick="() => DeleteCharacter(context.Id)"
                               Icon="@Icons.Material.Filled.Delete"
                    Color="Color.Error"
                    Variant="Variant.Filled">
                </MudIconButton>
            </MudTd>
        </RowTemplate>
    </MudTable>

    <MudIconButton OnClick="CreateCharacter"
                   Color="Color.Primary"
                   Variant="Variant.Filled">Create New Character</MudIconButton>
<p style="height:500px;"></p>

@code {

    List<Character> characters = new List<Character>();

    Character character = new Character();

    protected override async Task OnInitializedAsync()
    {
        await clientCharacterService.GetAllCharacters();
    }
  
    void CreateCharacter() => NavigationManager.NavigateTo($"/character");
    void EditCharacter(int id) => NavigationManager.NavigateTo($"/character/{id}");
    async void DeleteCharacter(int id)
    {
        await clientCharacterService.DeleteCharacter(id);
        StateHasChanged();
    }

    private void HandleSubmit()
    {      
        characters.Add(character);
    }

    
}